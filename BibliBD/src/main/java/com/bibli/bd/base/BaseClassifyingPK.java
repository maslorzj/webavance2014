package com.bibli.bd.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 */
public class BaseClassifyingPK implements Serializable {

	private int hashCode = Integer.MIN_VALUE;

	private java.lang.Integer _position;
	private com.bibli.bd.User _user;

	public BaseClassifyingPK () {}
	
	public BaseClassifyingPK (
		java.lang.Integer _position,
		com.bibli.bd.User _user) {

		this.setPosition(_position);
		this.setUser(_user);
	}


	public java.lang.Integer getPosition () {
		return _position;
	}

	public void setPosition (java.lang.Integer _position) {
		hashCode = Integer.MIN_VALUE;
		this._position = _position;
	}

	public com.bibli.bd.User getUser () {
		return _user;
	}

	public void setUser (com.bibli.bd.User _user) {
		hashCode = Integer.MIN_VALUE;
		this._user = _user;
	}

	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof com.bibli.bd.ClassifyingPK)) return false;
		else {
			com.bibli.bd.ClassifyingPK mObj = (com.bibli.bd.ClassifyingPK) obj;
			if (null != this.getPosition() && null != mObj.getPosition()) {
				if (!this.getPosition().equals(mObj.getPosition())) {
					return false;
				}
			}
			else {
				return false;
			}
			if (null != this.getUser() && null != mObj.getUser()) {
				if (!this.getUser().equals(mObj.getUser())) {
					return false;
				}
			}
			else {
				return false;
			}
			return true;
		}
	}

	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			StringBuffer sb = new StringBuffer();
			if (null != this.getPosition()) {
				sb.append(this.getPosition().hashCode());
				sb.append(":");
			}
			else {
				return super.hashCode();
			}
			if (null != this.getUser()) {
				sb.append(this.getUser().hashCode());
				sb.append(":");
			}
			else {
				return super.hashCode();
			}
			this.hashCode = sb.toString().hashCode();
		}
		return this.hashCode;
	}

}